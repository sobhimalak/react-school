{"ast":null,"code":"import _slicedToArray from\"/Users/sobhione/Documents/react-js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import CounterHooks from'./CounterHooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ThemeContext=/*#__PURE__*/React.createContext();function App(){var _useState=useState('red'),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];return/*#__PURE__*/_jsxs(ThemeContext.Provider,{value:{backgroundColor:theme},children:[/*#__PURE__*/_jsx(CounterHooks,{initialCount:0}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setTheme(function(prevTheme){return prevTheme==='red'?'blue':'red';});},children:\"Toggle Theme\"})]});}export default App;","map":{"version":3,"sources":["/Users/sobhione/Documents/react-js/src/App.js"],"names":["React","useState","CounterHooks","ThemeContext","createContext","App","theme","setTheme","backgroundColor","prevTheme"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,wFAGA,MAAO,IAAMC,CAAAA,YAAY,cAAGH,KAAK,CAACI,aAAN,EAArB,CAEP,QAASC,CAAAA,GAAT,EAAe,CACb,cAA0BJ,QAAQ,CAAC,KAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACE,mBACE,MAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEC,eAAe,CAAEF,KAAnB,CAA9B,wBACA,KAAC,YAAD,EAAe,YAAY,CAAE,CAA7B,EADA,cAEA,eAAQ,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAAC,SAAAE,SAAS,CAAI,CAC3C,MAAOA,CAAAA,SAAS,GAAK,KAAd,CAAsB,MAAtB,CAA+B,KAAtC,CACD,CAF8B,CAAd,EAAjB,0BAFA,GADF,CAQH,CACD,cAAeJ,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport CounterHooks from './CounterHooks'\n\n\nexport const ThemeContext = React.createContext()\n\nfunction App() {\n  const [theme, setTheme] = useState('red')\n    return (\n      <ThemeContext.Provider value={{ backgroundColor: theme }}>\n      <CounterHooks  initialCount={0} />\n      <button onClick={() => setTheme(prevTheme => {\n        return prevTheme === 'red' ? 'blue' : 'red'\n      })}>Toggle Theme</button>\n      </ThemeContext.Provider>\n    )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}